// Crit-bit trees for JavaScript by Jason Davies, http://www.jasondavies.com/
// See LICENSE for licensing details.
// Based on Adam Langley's public domain https://github.com/agl/critbit
// In turn, based on Dan Bernstein's public domain qhasm.
(function(a){function b(){this.nodes=[],this.next=0,this.keys=[],this.free=[]}b.prototype.contains=function(a){var b=this.nodes,c=this.keys,d=a.length;if(!this.next)return!1;var e=b[0],f;while(1&e)f=(f=b[e+2])<d?a.charCodeAt(f):0,e=b[e+(1+(b[e+3]|f)>>8)];return a===c[e>>1]},b.prototype.insert=function(a){var b=a.length,c=this.nodes,d=this.keys,e;if(!this.next)return d.push(a),c[this.next++]=0,a;var f=c[0];while(1&f)e=(e=c[f+2])<b?a.charCodeAt(e):0,f=c[f+(1+(c[f+3]|e)>>8)];var g,h=!1,i=d[f>>1],j=i.length,k,l;for(var m=0;m<b;++m){k=m<j?i.charCodeAt(m):0,l=a.charCodeAt(m);if(k!==l){g=k^l,h=!0;break}}if(!h){e=m<j?i.charCodeAt(m):0,e!==0&&(g=e,h=!0);if(!h)return}g|=g>>1,g|=g>>2,g|=g>>4,g=(~g|g>>1)&255,e=m<j?i.charCodeAt(m):0;var n=1+(g|e)>>8,k=d.push(a)-1<<1,o=this.next;this.next+=4,c[o]=c[o+1]=0,c[o+1-n]=k,c[o+2]=m,c[o+3]=g;var p=0;for(;;){f=c[p];if(!(1&f))break;e=c[f+2];if(e>m)break;if(e===m&&c[f+3]>g)break;e=e<b?a.charCodeAt(e):0,p=f+(1+(c[f+3]|e)>>8)}return c[o+n]=c[p],c[p]=o,a},b.prototype.remove=function(a){var b=a.length;if(!this.next)return;var c=this.nodes,d=this.keys,e=0,f=-1,g=c[0],h,i,j=0;while(1&g)f=e,h=g,i=(i=c[h+2])<b?a.charCodeAt(i):0,j=1+(c[h+3]|i)>>8,g=c[e=h+j];if(d[g>>1]!==a)return;return f<0?(c.length=0,this.next=0,d.length=0,a):(c[f]=c[h+1-j],a)},b.prototype.prefixed=function(a,b){function j(a){return 1&a?j(d[a])?j(d[a+1]):!1:b(e[a>>1])}if(!this.next)return;var c=a.length,d=this.nodes,e=this.keys,f=d[0],g=f,h,i;while(1&f)h=(i=d[f+2])<c?a.charCodeAt(i):0,f=d[f+(1+(d[f+3]|h)>>8)],i<c&&(g=f);if(e[f>>1].substr(0,c)!==a)return;j(g)},b.prototype.union=function(a){if(!this.next)return a;if(!a.size())return this},b.prototype.intersection=function(a){if(!this.next)return this.next;if(!a.size())return a},a.Tree=b})(this);